// server/index.ts
import express2 from "express";

// server/routes.ts
import { createServer } from "http";

// server/db.ts
import pg from "pg";
import dotenv from "dotenv";
var { Pool } = pg;
dotenv.config();
var db = new Pool({
  connectionString: process.env.DATABASE_URL,
  ssl: process.env.NODE_ENV === "production" ? { rejectUnauthorized: false } : false
});
async function testConnection() {
  try {
    const client = await db.connect();
    console.log("Successfully connected to PostgreSQL database!");
    client.release();
    return true;
  } catch (error) {
    console.error("Database connection error:", error);
    return false;
  }
}
async function initDb() {
  try {
    await db.query(`
      CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
    `);
    await db.query(`
      DO $$ BEGIN
        CREATE TYPE category_enum AS ENUM ('frock', 'lehenga', 'kurta', 'net', 'cutpiece');
      EXCEPTION
        WHEN duplicate_object THEN null;
      END $$;
    `);
    await db.query(`
      CREATE TABLE IF NOT EXISTS products (
        id SERIAL PRIMARY KEY,
        name TEXT NOT NULL,
        description TEXT NOT NULL,
        price INTEGER NOT NULL,
        image_url TEXT NOT NULL,
        media_files JSONB DEFAULT '[]' NOT NULL,
        category category_enum NOT NULL,
        stock INTEGER NOT NULL DEFAULT 0,
        is_featured BOOLEAN DEFAULT FALSE,
        is_active BOOLEAN DEFAULT TRUE,
        sku TEXT NOT NULL
      );
    `);
    await db.query(`
      CREATE TABLE IF NOT EXISTS categories (
        id SERIAL PRIMARY KEY,
        name TEXT NOT NULL UNIQUE,
        description TEXT,
        product_count INTEGER DEFAULT 0
      );
    `);
    await db.query(`
      CREATE TABLE IF NOT EXISTS cart_items (
        id SERIAL PRIMARY KEY,
        cart_id TEXT NOT NULL,
        product_id INTEGER NOT NULL,
        quantity INTEGER NOT NULL DEFAULT 1,
        FOREIGN KEY (product_id) REFERENCES products (id) ON DELETE CASCADE
      );
    `);
    await db.query(`
      CREATE TABLE IF NOT EXISTS admins (
        id SERIAL PRIMARY KEY,
        username TEXT NOT NULL UNIQUE,
        password TEXT NOT NULL,
        email TEXT,
        role TEXT DEFAULT 'user'
      );
    `);
    const defaultCategories = [
      { name: "frock", description: "Casual and formal dress materials for children and women" },
      { name: "lehenga", description: "Traditional Indian clothing for women, often worn during weddings and festivals" },
      { name: "kurta", description: "Traditional Indian clothing materials for men and women" },
      { name: "net", description: "Transparent, delicate fabrics used for overlays and decorative purposes" },
      { name: "cutpiece", description: "Pre-cut fabric pieces ready for specific garment patterns" }
    ];
    for (const category of defaultCategories) {
      await db.query(`
        INSERT INTO categories (name, description)
        VALUES ($1, $2)